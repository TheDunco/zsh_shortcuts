{
  "Dynamic console": {
    "prefix": "clog",
    "body": "console.${1|log,info,error,warn|}(`%c[${TM_FILENAME}] ${2:message}`, 'color:${3|red,orange,yellow,green,blue,lightblue,purple,magenta,turquoise,white,black,gray|}'$4);$0",
    "scope": "javascript,typescript,typescriptreact,javascriptreact",
    "description": "Quick and dynamic console log/info/error snippet"
  },
  "Console Log Colored": {
    "prefix": "clc",
    "body": "console.${1|log,info,error,warn|}(`%c[${TM_FILENAME}] ${2:message}`, 'color:${3|red,orange,yellow,green,blue,lightblue,purple,magenta,turquoise,white,black,gray|}'$4);$0",
    "scope": "javascript,typescript,typescriptreact,javascriptreact",
    "description": "Log colored output to the console"
  },
  "Console Log Object Colored": {
    "prefix": "cloc",
    "body": "console.${1|log,info,error,warn|}(`%c[${TM_FILENAME}] ${2:object} :>> ${${2:object}}`, 'color:${3|red,orange,yellow,green,blue,lightblue,purple,magenta,turquoise,white,black,gray|}', ${2:object}$4);$0",
    "scope": "javascript,typescript,typescriptreact,javascriptreact",
    "description": "Console log colored object to the console"
  },
  "Console Log Colored & Timed": {
    "prefix": "clt",
    "body": "console.${1|log,info,error,warn|}(`%c[${TM_FILENAME}] ${new Date()} ${2:message}`, 'color:${3|red,orange,yellow,green,blue,lightblue,purple,magenta,turquoise,white,black,gray|}'$4);$0",
    "scope": "javascript,typescript,typescriptreact,javascriptreact",
    "description": "Log colored output to the console"
  },
  "Functional Component Template": {
    "prefix": "fc",
    "body": [
      "export const ${1:componentName}: React.FC = () => {",
      "\treturn(",
      "\t\t<>",
      "\t\t\t$0",
      "\t\t</>\n)}"
    ],
    "scope": "typescriptreact,javascriptreact",
    "description": "React functional component template"
  },
  "Functional Component Template w/ Props": {
    "prefix": "fcp",
    "body": [
      "interface Props {\n\tchildren?: React.ReactNode;\n}",
      "\nexport const ${2:ComponentName}: React.FC<Props> = ({${3:destructureProps}}) => {",
      "\treturn(",
      "\t\t<>",
      "\t\t\t$0",
      "\t\t</>\n)}"
    ],
    "scope": "typescriptreact,javascriptreact",
    "description": "React functional component w/ props template"
  }
}
